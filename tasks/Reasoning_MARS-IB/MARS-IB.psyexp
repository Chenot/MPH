<?xml version="1.0" ?>
<PsychoPy2experiment encoding="utf-8" version="2024.1.4">
  <Settings>
    <Param val="use prefs" valType="str" updates="None" name="Audio latency priority"/>
    <Param val="use prefs" valType="str" updates="None" name="Audio lib"/>
    <Param val="" valType="str" updates="None" name="Completed URL"/>
    <Param val="auto" valType="str" updates="None" name="Data file delimiter"/>
    <Param val="u'data/%s_%s_%s' % (expInfo['participant'], expName, expInfo['date'])" valType="code" updates="None" name="Data filename"/>
    <Param val="False" valType="bool" updates="None" name="Enable Escape"/>
    <Param val="" valType="str" updates="None" name="End Message"/>
    <Param val="{'participant': '', 'session': '001'}" valType="code" updates="None" name="Experiment info"/>
    <Param val="True" valType="bool" updates="None" name="Force stereo"/>
    <Param val="True" valType="bool" updates="None" name="Full-screen window"/>
    <Param val="html" valType="str" updates="None" name="HTML path"/>
    <Param val="" valType="str" updates="None" name="Incomplete URL"/>
    <Param val="testMonitor" valType="str" updates="None" name="Monitor"/>
    <Param val="[]" valType="fileList" updates="None" name="Resources"/>
    <Param val="False" valType="bool" updates="None" name="Save csv file"/>
    <Param val="True" valType="bool" updates="None" name="Save excel file"/>
    <Param val="False" valType="bool" updates="None" name="Save hdf5 file"/>
    <Param val="True" valType="bool" updates="None" name="Save log file"/>
    <Param val="True" valType="bool" updates="None" name="Save psydat file"/>
    <Param val="True" valType="bool" updates="None" name="Save wide csv file"/>
    <Param val="1" valType="num" updates="None" name="Screen"/>
    <Param val="True" valType="bool" updates="None" name="Show info dlg"/>
    <Param val="False" valType="bool" updates="None" name="Show mouse"/>
    <Param val="height" valType="str" updates="None" name="Units"/>
    <Param val="" valType="str" updates="None" name="Use version"/>
    <Param val="[1920, 1080]" valType="code" updates="None" name="Window size (pixels)"/>
    <Param val="none" valType="str" updates="None" name="backgroundFit"/>
    <Param val="" valType="str" updates="None" name="backgroundImg"/>
    <Param val="avg" valType="str" updates="None" name="blendMode"/>
    <Param val="float" valType="str" updates="None" name="clockFormat"/>
    <Param val="{'thisRow.t': 'priority.CRITICAL', 'expName': 'priority.LOW'}" valType="dict" updates="None" name="colPriority"/>
    <Param val="$[1,1,1]" valType="str" updates="None" name="color"/>
    <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
    <Param val="100.1.1.1" valType="str" updates="None" name="elAddress"/>
    <Param val="FILTER_LEVEL_2" valType="str" updates="None" name="elDataFiltering"/>
    <Param val="FILTER_LEVEL_OFF" valType="str" updates="None" name="elLiveFiltering"/>
    <Param val="EYELINK 1000 DESKTOP" valType="str" updates="None" name="elModel"/>
    <Param val="ELLIPSE_FIT" valType="str" updates="None" name="elPupilAlgorithm"/>
    <Param val="PUPIL_AREA" valType="str" updates="None" name="elPupilMeasure"/>
    <Param val="1000" valType="num" updates="None" name="elSampleRate"/>
    <Param val="False" valType="bool" updates="None" name="elSimMode"/>
    <Param val="RIGHT_EYE" valType="str" updates="None" name="elTrackEyes"/>
    <Param val="PUPIL_CR_TRACKING" valType="str" updates="None" name="elTrackingMode"/>
    <Param val="MARS-IB" valType="str" updates="None" name="expName"/>
    <Param val="on Sync" valType="str" updates="None" name="exportHTML"/>
    <Param val="None" valType="str" updates="None" name="eyetracker"/>
    <Param val="" valType="code" updates="None" name="frameRate"/>
    <Param val="Attempting to measure frame rate of screen, please wait..." valType="str" updates="None" name="frameRateMsg"/>
    <Param val="127.0.0.1" valType="str" updates="None" name="gpAddress"/>
    <Param val="4242" valType="num" updates="None" name="gpPort"/>
    <Param val="ioHub" valType="str" updates="None" name="keyboardBackend"/>
    <Param val="exp" valType="code" updates="None" name="logging level"/>
    <Param val="True" valType="bool" updates="None" name="measureFrameRate"/>
    <Param val="('MIDDLE_BUTTON',)" valType="list" updates="None" name="mgBlink"/>
    <Param val="CONTINUOUS" valType="str" updates="None" name="mgMove"/>
    <Param val="0.5" valType="num" updates="None" name="mgSaccade"/>
    <Param val="neon.local" valType="str" updates="None" name="plCompanionAddress"/>
    <Param val="8080" valType="num" updates="None" name="plCompanionPort"/>
    <Param val="True" valType="bool" updates="None" name="plCompanionRecordingEnabled"/>
    <Param val="0.6" valType="num" updates="None" name="plConfidenceThreshold"/>
    <Param val="True" valType="bool" updates="None" name="plPupilCaptureRecordingEnabled"/>
    <Param val="" valType="str" updates="None" name="plPupilCaptureRecordingLocation"/>
    <Param val="127.0.0.1" valType="str" updates="None" name="plPupilRemoteAddress"/>
    <Param val="50020" valType="num" updates="None" name="plPupilRemotePort"/>
    <Param val="1000" valType="num" updates="None" name="plPupilRemoteTimeoutMs"/>
    <Param val="False" valType="bool" updates="None" name="plPupillometryOnly"/>
    <Param val="psychopy_iohub_surface" valType="str" updates="None" name="plSurfaceName"/>
    <Param val="1" valType="code" updates="None" name="runMode"/>
    <Param val="False" valType="bool" updates="None" name="rush"/>
    <Param val="time" valType="str" updates="None" name="sortColumns"/>
    <Param val="" valType="str" updates="None" name="tbLicenseFile"/>
    <Param val="" valType="str" updates="None" name="tbModel"/>
    <Param val="60" valType="num" updates="None" name="tbSampleRate"/>
    <Param val="" valType="str" updates="None" name="tbSerialNo"/>
    <Param val="pyglet" valType="str" updates="None" name="winBackend"/>
  </Settings>
  <Routines>
    <Routine name="trial">
      <RoutineSettingsComponent name="trial" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="trial" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <ImageComponent name="image_main" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$image_file_main" valType="str" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="None" valType="str" updates="constant" name="mask"/>
        <Param val="image_main" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0.2)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.5,0.5)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="512" valType="code" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <ImageComponent name="opt1" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$image_file_opt1" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="opt1" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.5, -0.3)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.2, 0.2)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <ImageComponent name="opt2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$image_file_opt2" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="opt2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.15, -0.3)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.2, 0.2)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <ImageComponent name="opt3" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$image_file_opt3" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="opt3" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.15, -0.3)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.2, 0.2)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <ImageComponent name="opt4" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$image_file_opt4" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="opt4" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.5, -0.3)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.2, 0.2)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <MouseComponent name="mouse" plugin="None">
        <Param val="opt1,opt2,opt3,opt4" valType="list" updates="constant" name="clickable"/>
        <Param val="correct_image" valType="list" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="valid click" valType="str" updates="constant" name="forceEndRoutineOnPress"/>
        <Param val="mouse" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="constant" name="newClicksOnly"/>
        <Param val="on click" valType="str" updates="None" name="saveMouseState"/>
        <Param val="name," valType="list" updates="constant" name="saveParamsClickable"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="False" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="mouse onset" valType="str" updates="constant" name="timeRelativeTo"/>
      </MouseComponent>
      <CodeComponent name="code_mouse" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="choice = null;&amp;#10;marker = `stimulus_${image_file_main}`;&amp;#10;send_marker(marker);&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="# Initialize choice as None&amp;#10;choice = None&amp;#10;&amp;#10;marker = f&quot;stimulus_{image_file_main}&quot;&amp;#10;send_marker(marker)" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="if (mouse.isPressedIn(opt1)) {&amp;#10;    choice = &quot;opt1&quot;;&amp;#10;} else {&amp;#10;    if (mouse.isPressedIn(opt2)) {&amp;#10;        choice = &quot;opt2&quot;;&amp;#10;    } else {&amp;#10;        if (mouse.isPressedIn(opt3)) {&amp;#10;            choice = &quot;opt3&quot;;&amp;#10;        } else {&amp;#10;            if (mouse.isPressedIn(opt4)) {&amp;#10;                choice = &quot;opt4&quot;;&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;if (choice) {&amp;#10;    send_marker(choice);&amp;#10;    psychoJS.experiment.addData(&quot;resp_mouse&quot;, choice);&amp;#10;} else {&amp;#10;    psychoJS.experiment.addData(&quot;resp_mouse&quot;, &quot;no_response&quot;);&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="# Check which option was clicked and store the choice&amp;#10;if mouse.isPressedIn(opt1):&amp;#10;    choice = 'opt1'&amp;#10;elif mouse.isPressedIn(opt2):&amp;#10;    choice = 'opt2'&amp;#10;elif mouse.isPressedIn(opt3):&amp;#10;    choice = 'opt3'&amp;#10;elif mouse.isPressedIn(opt4):&amp;#10;    choice = 'opt4'&amp;#10;&amp;#10;# If a choice was made, send the corresponding LSL marker and store the response&amp;#10;if choice:&amp;#10;    send_marker(choice)  # Function to send the LSL marker&amp;#10;    thisExp.addData('resp_mouse', choice)  # Add the choice to the data file&amp;#10;else:&amp;#10;    thisExp.addData('resp_mouse', 'no_response')  # Handle case where no choice was made&amp;#10;" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_mouse" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="code_correct_resp" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((correct_resp === image_file_opt1)) {&amp;#10;    correct_image = opt1;&amp;#10;} else {&amp;#10;    if ((correct_resp === image_file_opt2)) {&amp;#10;        correct_image = opt2;&amp;#10;    } else {&amp;#10;        if ((correct_resp === image_file_opt3)) {&amp;#10;            correct_image = opt3;&amp;#10;        } else {&amp;#10;            if ((correct_resp === image_file_opt4)) {&amp;#10;                correct_image = opt4;&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="# Determine which opt is the correct one based on the correct_resp from the CSV&amp;#10;if correct_resp == image_file_opt1:&amp;#10;    correct_image = opt1&amp;#10;elif correct_resp == image_file_opt2:&amp;#10;    correct_image = opt2&amp;#10;elif correct_resp == image_file_opt3:&amp;#10;    correct_image = opt3&amp;#10;elif correct_resp == image_file_opt4:&amp;#10;    correct_image = opt4" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_correct_resp" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="text_timer" plugin="None">
        <Param val="black" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.04" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_timer" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -0.1)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <CodeComponent name="code_text_timer" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="# Initialize the timer (in seconds)&amp;#10;timer_task = 30" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="timer_task = 30;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="routine_timer = new util.Clock();&amp;#10;routine_timer.reset();&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="# Initialize the timer&amp;#10;routine_timer = core.Clock()&amp;#10;routine_timer.reset()" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="# Calculate remaining time&amp;#10;remaining_time = timer_task - routine_timer.getTime()&amp;#10;&amp;#10;# Show the timer only if there are 5 seconds or less remaining&amp;#10;if remaining_time &lt;= 5:&amp;#10;    # Update the timer text&amp;#10;    text_timer.setText(f'{remaining_time:.0f}')&amp;#10;    text_timer.setAutoDraw(True)  # Make sure the timer text is drawn&amp;#10;else:&amp;#10;    text_timer.setAutoDraw(False)  # Hide the timer text&amp;#10;&amp;#10;# End the routine if time is up&amp;#10;if remaining_time &lt;= 0:&amp;#10;    continueRoutine = False&amp;#10;" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="remaining_time = (timer_task - routine_timer.getTime());&amp;#10;if ((remaining_time &lt;= 5)) {&amp;#10;    text_timer.setText(`${util.pad(Number.parseFloat(remaining_time).toFixed(0), 1)}`);&amp;#10;    text_timer.setAutoDraw(true);&amp;#10;} else {&amp;#10;    text_timer.setAutoDraw(false);&amp;#10;}&amp;#10;if ((remaining_time &lt;= 0)) {&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_text_timer" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="code_LSL_trial" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="marker = `stimulus_${image_file_main}`;&amp;#10;send_marker(marker);&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="marker = f&quot;stimulus_{image_file_main}&quot;&amp;#10;send_marker(marker)" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="answer_corr = `response_${mouse.corr}`;&amp;#10;send_marker(answer_corr);&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="answer_corr = f&quot;response_{mouse.corr}&quot;&amp;#10;send_marker(answer_corr)  # Function to send the LSL marker&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_LSL_trial" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="done">
      <RoutineSettingsComponent name="done" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="done" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="end_text" plugin="None">
        <Param val="black" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="code" updates="constant" name="letterHeight"/>
        <Param val="end_text" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="extendedStr" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_2" plugin="None">
        <Param val="['space']" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_2" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="nothing" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <CodeComponent name="LSL_MARS_end" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="send_marker(&quot;MARS_end&quot;);&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="send_marker('MARS_end')" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="LSL_MARS_end" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="code_end_text" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="end_text.setText(instructions[&quot;Text_end_task&quot;]);&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="# Set the text for the third set of instructions&amp;#10;end_text.setText(instructions['Text_end_task'])&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_end_text" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="init">
      <RoutineSettingsComponent name="init" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="init" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="language" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="# Check if expInfo exists and create the language variable&amp;#10;if 'expInfo' not in globals():&amp;#10;    expInfo = {}&amp;#10;&amp;#10;# Set default values to English if it is missing from expInfo keys&amp;#10;if 'language' not in expInfo:&amp;#10;    expInfo['language'] = 'English'&amp;#10;&amp;#10;# Create the language variable&amp;#10;language = expInfo.get('language')&amp;#10;&amp;#10;# Define instructions based on the selected language&amp;#10;if language == &quot;English&quot;:&amp;#10;    instructions = {&amp;#10;        'name_task' : 'MATRIX REASONING',&amp;#10;        'Instructions1': (&amp;#10;            &quot;Welcome to the Matrix Reasoning Task.\n\n&quot;&amp;#10;            &quot;In this task, you will be shown a 3x3 grid of patterns. The last one, &quot;&amp;#10;            &quot;in the bottom right-hand corner, will be missing.\n&quot;&amp;#10;            &quot;You need to select which of the four possible patterns along the bottom fits into the gap.&quot;&amp;#10;        ),&amp;#10;        'Instructions2': (&amp;#10;            &quot;Try to be as fast and as accurate as you can be.\n\n&quot;&amp;#10;            &quot;If you cannot solve the puzzle, then you should guess - you will not be penalized for an incorrect answer.\n&quot;&amp;#10;            &quot;The task contains a mix of easy, medium, and hard puzzles.\n&quot;&amp;#10;            &quot;You will have 30 seconds to complete each puzzle.\n\n&quot;&amp;#10;            &quot;Press the space bar to begin the practice.&quot;&amp;#10;        ),&amp;#10;        'Text_start_task': (&amp;#10;            &quot;The practice is over. Now we shall begin the real task.\n\n&quot;&amp;#10;            &quot;Ready?\n\n&quot;&amp;#10;            &quot;Press the space bar to begin.&quot;&amp;#10;        ),&amp;#10;        'Text_pause_between_blocks': &quot;Pause\n\nPress the space bar when you are ready to continue.&quot;,&amp;#10;        'Text_end_task': (&amp;#10;            &quot;This task is now over.\n\nThank you!\n\nPress the space bar to continue.&quot;&amp;#10;        )&amp;#10;    }&amp;#10;else:&amp;#10;    instructions = {&amp;#10;        'name_task' : 'RAISONNEMENT MATRICIEL',&amp;#10;        'Instructions1': (&amp;#10;            &quot;Bienvenue dans la tâche de raisonnement matriciel.\n\n&quot;&amp;#10;            &quot;Dans cette tâche, un tableau de motifs 3x3 vous sera présenté. Le dernier, &quot;&amp;#10;            &quot;dans le coin inférieur droit, sera manquant.\n&quot;&amp;#10;            &quot;Vous devez sélectionner lequel des quatre motifs possibles en bas correspond à l'emplacement vide.&quot;&amp;#10;        ),&amp;#10;        'Instructions2': (&amp;#10;            &quot;Essayez d'être aussi rapide et précis que possible.\n\n&quot;&amp;#10;            &quot;Si vous ne pouvez pas résoudre le puzzle, vous devez deviner - vous ne serez pas pénalisé pour une réponse incorrecte.\n&quot;&amp;#10;            &quot;La tâche contient un mélange de puzzles faciles, moyens et difficiles.\n&quot;&amp;#10;            &quot;Vous aurez 30 secondes pour compléter chaque puzzle.\n\n&quot;&amp;#10;            &quot;Appuyez sur la barre d'espace pour commencer l'entraînement.&quot;&amp;#10;        ),&amp;#10;        'Text_start_task': (&amp;#10;            &quot;L'entraînement est terminée. Nous allons maintenant commencer la vraie tâche.\n\n&quot;&amp;#10;            &quot;Prêt ?\n\n&quot;&amp;#10;            &quot;Appuyez sur la barre d'espace pour commencer.&quot;&amp;#10;        ),&amp;#10;        'Text_pause_between_blocks': &quot;Pause\n\nAppuyez sur la barre d'espace lorsque vous êtes prêt·e à continuer.&quot;,&amp;#10;        'Text_end_task': (&amp;#10;            &quot;Cette tâche est maintenant terminée.\n\nMerci !\n\nAppuyez sur la barre d'espace pour continuer.&quot;&amp;#10;        )&amp;#10;    }" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="var _pj;&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;if ((! _pj.in_es6(&quot;expInfo&quot;, globals()))) {&amp;#10;    expInfo = {};&amp;#10;}&amp;#10;if ((! _pj.in_es6(&quot;language&quot;, expInfo))) {&amp;#10;    expInfo[&quot;language&quot;] = &quot;English&quot;;&amp;#10;}&amp;#10;language = expInfo.get(&quot;language&quot;);&amp;#10;if ((language === &quot;English&quot;)) {&amp;#10;    instructions = {&quot;name_task&quot;: &quot;MATRIX REASONING&quot;, &quot;Instructions1&quot;: &quot;Welcome to the Matrix Reasoning Task.\n\nIn this task, you will be shown a 3x3 grid of patterns. The last one, in the bottom right-hand corner, will be missing.\nYou need to select which of the four possible patterns along the bottom fits into the gap.&quot;, &quot;Instructions2&quot;: &quot;Try to be as fast and as accurate as you can be.\n\nIf you cannot solve the puzzle, then you should guess - you will not be penalized for an incorrect answer.\nThe task contains a mix of easy, medium, and hard puzzles.\nYou will have 30 seconds to complete each puzzle.\n\nPress the space bar to begin the practice.&quot;, &quot;Text_start_task&quot;: &quot;The practice is over. Now we shall begin the real task.\n\nReady?\n\nPress the space bar to begin.&quot;, &quot;Text_pause_between_blocks&quot;: &quot;Pause\n\nPress the space bar when you are ready to continue.&quot;, &quot;Text_end_task&quot;: &quot;This task is now over.\n\nThank you!\n\nPress the space bar to continue.&quot;};&amp;#10;} else {&amp;#10;    instructions = {&quot;name_task&quot;: &quot;RAISONNEMENT MATRICIEL&quot;, &quot;Instructions1&quot;: &quot;Bienvenue dans la t\u00e2che de raisonnement matriciel.\n\nDans cette t\u00e2che, un tableau de motifs 3x3 vous sera pr\u00e9sent\u00e9. Le dernier, dans le coin inf\u00e9rieur droit, sera manquant.\nVous devez s\u00e9lectionner lequel des quatre motifs possibles en bas correspond \u00e0 l'emplacement vide.&quot;, &quot;Instructions2&quot;: &quot;Essayez d'\u00eatre aussi rapide et pr\u00e9cis que possible.\n\nSi vous ne pouvez pas r\u00e9soudre le puzzle, vous devez deviner - vous ne serez pas p\u00e9nalis\u00e9 pour une r\u00e9ponse incorrecte.\nLa t\u00e2che contient un m\u00e9lange de puzzles faciles, moyens et difficiles.\nVous aurez 30 secondes pour compl\u00e9ter chaque puzzle.\n\nAppuyez sur la barre d'espace pour commencer l'entra\u00eenement.&quot;, &quot;Text_start_task&quot;: &quot;L'entra\u00eenement est termin\u00e9e. Nous allons maintenant commencer la vraie t\u00e2che.\n\nPr\u00eat ?\n\nAppuyez sur la barre d'espace pour commencer.&quot;, &quot;Text_pause_between_blocks&quot;: &quot;Pause\n\nAppuyez sur la barre d'espace lorsque vous \u00eates pr\u00eat\u00b7e \u00e0 continuer.&quot;, &quot;Text_end_task&quot;: &quot;Cette t\u00e2che est maintenant termin\u00e9e.\n\nMerci !\n\nAppuyez sur la barre d'espace pour continuer.&quot;};&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="language" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="LSL" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="import socket&amp;#10;import json&amp;#10;import threading&amp;#10;from pylsl import local_clock&amp;#10;&amp;#10;# Function to send markers to the LSL server&amp;#10;def send_marker(marker):&amp;#10;    event = {&amp;#10;        'marker': marker,&amp;#10;        'timestamp': local_clock()&amp;#10;    }&amp;#10;    message = json.dumps(event)&amp;#10;    &amp;#10;    def send():&amp;#10;        try:&amp;#10;            # Connect to the socket server and send the marker with a timeout&amp;#10;            client_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)&amp;#10;            client_socket.settimeout(0.1)  # Set timeout to 100 milliseconds&amp;#10;            client_socket.connect(('localhost', 5000))&amp;#10;            client_socket.sendall(message.encode('utf-8'))&amp;#10;            client_socket.close()&amp;#10;        except (ConnectionRefusedError, socket.timeout):&amp;#10;            print(&quot;LSL server is not running or connection timed out. Continuing without sending marker.&quot;)&amp;#10;    &amp;#10;    # Create and start a thread to send the marker&amp;#10;    send_thread = threading.Thread(target=send)&amp;#10;    send_thread.start()&amp;#10;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="import * as socket from 'socket';&amp;#10;import * as json from 'json';&amp;#10;import * as threading from 'threading';&amp;#10;import {local_clock} from 'pylsl';&amp;#10;function send_marker(marker) {&amp;#10;    var event, message, send_thread;&amp;#10;    event = {&quot;marker&quot;: marker, &quot;timestamp&quot;: local_clock()};&amp;#10;    message = json.dumps(psychoJS.eventManager);&amp;#10;    function send() {&amp;#10;        var client_socket;&amp;#10;        try {&amp;#10;            client_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM);&amp;#10;            client_socket.settimeout(0.1);&amp;#10;            client_socket.connect([&quot;localhost&quot;, 5000]);&amp;#10;            client_socket.sendall(message.encode(&quot;utf-8&quot;));&amp;#10;            client_socket.close();&amp;#10;        } catch(e) {&amp;#10;            if (((e instanceof ConnectionRefusedError) || (e instanceof socket.timeout))) {&amp;#10;                console.log(&quot;LSL server is not running or connection timed out. Continuing without sending marker.&quot;);&amp;#10;            } else {&amp;#10;                throw e;&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    send_thread = new threading.Thread({&quot;target&quot;: send});&amp;#10;    send_thread.start();&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="LSL" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="ActivateWindow" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="win.winHandle.activate()  # Ensure the PsychoPy window is the primary window&amp;#10;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="psychoJS.window.winHandle.activate();&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="ActivateWindow" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="ActivateMouse" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="event.Mouse(visible=True)&amp;#10;" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="new psychoJS.eventManager.Mouse({&quot;visible&quot;: true});&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="ActivateMouse" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="define_block" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="import pandas as pd&amp;#10;import psychopy.logging as logging&amp;#10;&amp;#10;# Set logging level to WARNING to suppress INFO and DEBUG messages&amp;#10;logging.console.setLevel(logging.WARNING)&amp;#10;&amp;#10;# Load the scenario CSV file&amp;#10;scenario_df = pd.read_csv('MARS-IB_scenario.csv')&amp;#10;&amp;#10;# Filter the practice trials&amp;#10;practice_indices = scenario_df.index[scenario_df['block'] == 'practice'].tolist()&amp;#10;# Convert indices to PsychoPy's format (string of ranges)&amp;#10;selected_rows_practice = f&quot;{practice_indices[0]}:{practice_indices[-1]+1}&quot; if practice_indices else &quot;&quot;&amp;#10;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="import * as pd from 'pandas';&amp;#10;import * as logging from 'psychopy/logging';&amp;#10;logging.console.setLevel(logging.WARNING);&amp;#10;scenario_df = pd.read_csv(&quot;MARS-IB_scenario.csv&quot;);&amp;#10;practice_indices = scenario_df.index[(scenario_df[&quot;block&quot;] === &quot;practice&quot;)].tolist();&amp;#10;selected_rows_practice = (practice_indices ? `${practice_indices[0]}:${(practice_indices.slice((- 1))[0] + 1)}` : &quot;&quot;);&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="define_block" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="QuitTask" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="from psychopy import core, event&amp;#10;&amp;#10;# Add a global shutdown key: Ctrl + Q to quit the experiment&amp;#10;event.globalKeys.add(key='q', modifiers=['ctrl'], func=core.quit)&amp;#10;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="import {core, event} from 'psychopy';&amp;#10;psychoJS.eventManager.globalKeys.add({&quot;key&quot;: &quot;q&quot;, &quot;modifiers&quot;: [&quot;ctrl&quot;], &quot;func&quot;: core.quit});&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="QuitTask" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="fixation_cross">
      <RoutineSettingsComponent name="fixation_cross" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="fixation_cross" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="blank" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="blank" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="0.5" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="cross" plugin="None">
        <Param val="black" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="num" updates="constant" name="letterHeight"/>
        <Param val="cross" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0.2)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.5" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1.2" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="+" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="block_counter">
      <RoutineSettingsComponent name="block_counter" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="block_counter" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="blockSetup" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="block_index += 1;&amp;#10;if ((block_index &gt;= scenario_df[(scenario_df[&quot;block&quot;] === &quot;test&quot;)][&quot;block_n&quot;].unique().length)) {&amp;#10;    testblocks.finished = true;&amp;#10;    continueRoutine = false;&amp;#10;} else {&amp;#10;    block_n = block_index;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="# Increment block counter&amp;#10;block_index += 1&amp;#10;&amp;#10;# Determine the current block type and number&amp;#10;# block_type = 'test'&amp;#10;if block_index &gt;= len(scenario_df[scenario_df['block'] == 'test']['block_n'].unique()):&amp;#10;    # Skip the remaining test blocks&amp;#10;    testblocks.finished = True&amp;#10;    continueRoutine = False&amp;#10;else:&amp;#10;    block_n = block_index  # block_n in CSV starts from 1&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="blockSetup" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="LSL_start_testblock" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="send_marker(&quot;start_block&quot;)" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="send_marker(&quot;start_block&quot;);&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="LSL_start_testblock" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="pause">
      <RoutineSettingsComponent name="pause" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="pause" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="InstructionsText3" plugin="None">
        <Param val="black" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="InstructionsText3" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="go2" plugin="None">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="go2" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <CodeComponent name="code_InstructionsText3" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="InstructionsText3.setText(instructions[&quot;Text_pause_between_blocks&quot;]);&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="# Set the text for the third set of instructions&amp;#10;InstructionsText3.setText(instructions['Text_pause_between_blocks'])&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_InstructionsText3" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="check_block_counter" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="# Check if the block is test and block_n is to skip the loop&amp;#10;if is_test and block_index &gt;= len(scenario_df[scenario_df['block'] == 'test']['block_n'].unique()):&amp;#10;    testblocks.finished = True  # Skip the loop" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="if ((is_test &amp;&amp; (block_index &gt;= scenario_df[(scenario_df[&quot;block&quot;] === &quot;test&quot;)][&quot;block_n&quot;].unique().length))) {&amp;#10;    testblocks.finished = true;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="check_block_counter" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="startTask">
      <RoutineSettingsComponent name="startTask" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="startTask" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="InstructionsText2" plugin="None">
        <Param val="black" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="code" updates="constant" name="letterHeight"/>
        <Param val="InstructionsText2" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="set every repeat" name="text"/>
        <Param val="height" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="go" plugin="None">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="go" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="nothing" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <CodeComponent name="code_InstructionsText2" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="InstructionsText2.setText(instructions[&quot;Text_start_task&quot;]);&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="# Set the text for the second set of instructions&amp;#10;InstructionsText2.setText(instructions['Text_start_task'])" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_InstructionsText2" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="LSL_start_test_blocks" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="send_marker(&quot;start_test_blocks&quot;);&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="send_marker(&quot;start_test_blocks&quot;)" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="LSL_start_test_blocks" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="define_block_rows" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="# Initialize block variables&amp;#10;block_index = 0  # Start with the first block for test&amp;#10;is_test = True" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="block_index = 0;&amp;#10;is_test = true;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="define_block_rows" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="instr2">
      <RoutineSettingsComponent name="instr2" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="instr2" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="instr_text_2" plugin="None">
        <Param val="black" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.04" valType="code" updates="constant" name="letterHeight"/>
        <Param val="instr_text_2" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="extendedStr" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="1.5" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="instr_resp_2" plugin="None">
        <Param val="['space']" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="instr_resp_2" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="nothing" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <CodeComponent name="code_instr_text_2" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="instr_text_2.setText(instructions[&quot;Instructions2&quot;]);&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="# Set the text for the first set of instructions&amp;#10;instr_text_2.setText(instructions['Instructions2'])&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_instr_text_2" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="code_nametask_2" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="nametask_2.setText(instructions[&quot;name_task&quot;]);&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="nametask_2.setText(instructions['name_task'])&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_nametask_2" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="nametask_2" plugin="None">
        <Param val="black" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.06" valType="num" updates="constant" name="letterHeight"/>
        <Param val="nametask_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0.45)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="instr1">
      <RoutineSettingsComponent name="instr1" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="instr1" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="instr_text" plugin="None">
        <Param val="black" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.04" valType="code" updates="constant" name="letterHeight"/>
        <Param val="instr_text" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="extendedStr" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="1.5" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="instr_resp" plugin="None">
        <Param val="['space']" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="instr_resp" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="nothing" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <CodeComponent name="code_instr_text" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="instr_text.setText(instructions[&quot;Instructions1&quot;]);&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="# Set the text for the first set of instructions&amp;#10;instr_text.setText(instructions['Instructions1'])&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_instr_text" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="LSL_MARS_start" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="send_marker(&quot;MARS_start&quot;);&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="send_marker('MARS_start')" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="LSL_MARS_start" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="code_nametask" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="nametask.setText(instructions[&quot;name_task&quot;]);&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="nametask.setText(instructions['name_task'])&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_nametask" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="nametask" plugin="None">
        <Param val="black" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.06" valType="num" updates="constant" name="letterHeight"/>
        <Param val="nametask" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0.45)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
  </Routines>
  <Flow>
    <Routine name="init"/>
    <Routine name="instr1"/>
    <Routine name="instr2"/>
    <LoopInitiator loopType="TrialHandler" name="practice">
      <Param name="Selected rows" updates="None" val="$selected_rows_practice" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('block', 'practice'), ('block_n', 1), ('trial', 1), ('image_file_main', 'ressources/mars_3_M_ss1.jpeg'), ('image_file_opt1', 'ressources/mars_3_T1_ss1_pd.jpeg'), ('image_file_opt2', 'ressources/mars_3_T2_ss1_pd.jpeg'), ('image_file_opt3', 'ressources/mars_3_T3_ss1_pd.jpeg'), ('image_file_opt4', 'ressources/mars_3_T4_ss1_pd.jpeg'), ('correct', None)]), OrderedDict([('block', 'practice'), ('block_n', 1), ('trial', 2), ('image_file_main', 'ressources/mars_1_M_ss2.jpeg'), ('image_file_opt1', 'ressources/mars_1_T1_ss2_pd.jpeg'), ('image_file_opt2', 'ressources/mars_1_T2_ss2_pd.jpeg'), ('image_file_opt3', 'ressources/mars_1_T3_ss2_pd.jpeg'), ('image_file_opt4', 'ressources/mars_1_T4_ss2_pd.jpeg'), ('correct', None)]), OrderedDict([('block', 'practice'), ('block_n', 1), ('trial', 3), ('image_file_main', 'ressources/mars_2_M_ss3.jpeg'), ('image_file_opt1', 'ressources/mars_2_T1_ss3_pd.jpeg'), ('image_file_opt2', 'ressources/mars_2_T2_ss3_pd.jpeg'), ('image_file_opt3', 'ressources/mars_2_T3_ss3_pd.jpeg'), ('image_file_opt4', 'ressources/mars_2_T4_ss3_pd.jpeg'), ('correct', None)]), OrderedDict([('block', 'test'), ('block_n', 1), ('trial', 1), ('image_file_main', 'ressources/mars_55_M_ss1.jpeg'), ('image_file_opt1', 'ressources/mars_55_T1_ss1_pd.jpeg'), ('image_file_opt2', 'ressources/mars_55_T2_ss1_pd.jpeg'), ('image_file_opt3', 'ressources/mars_55_T3_ss1_pd.jpeg'), ('image_file_opt4', 'ressources/mars_55_T4_ss1_pd.jpeg'), ('correct', None)]), OrderedDict([('block', 'test'), ('block_n', 1), ('trial', 2), ('image_file_main', 'ressources/mars_30_M_ss3.jpeg'), ('image_file_opt1', 'ressources/mars_30_T1_ss3_pd.jpeg'), ('image_file_opt2', 'ressources/mars_30_T2_ss3_pd.jpeg'), ('image_file_opt3', 'ressources/mars_30_T3_ss3_pd.jpeg'), ('image_file_opt4', 'ressources/mars_30_T4_ss3_pd.jpeg'), ('correct', None)]), OrderedDict([('block', 'test'), ('block_n', 1), ('trial', 3), ('image_file_main', 'ressources/mars_64_M_ss1.jpeg'), ('image_file_opt1', 'ressources/mars_64_T1_ss1_pd.jpeg'), ('image_file_opt2', 'ressources/mars_64_T2_ss1_pd.jpeg'), ('image_file_opt3', 'ressources/mars_64_T3_ss1_pd.jpeg'), ('image_file_opt4', 'ressources/mars_64_T4_ss1_pd.jpeg'), ('correct', None)]), OrderedDict([('block', 'test'), ('block_n', 1), ('trial', 4), ('image_file_main', 'ressources/mars_45_M_ss3.jpeg'), ('image_file_opt1', 'ressources/mars_45_T1_ss3_pd.jpeg'), ('image_file_opt2', 'ressources/mars_45_T2_ss3_pd.jpeg'), ('image_file_opt3', 'ressources/mars_45_T3_ss3_pd.jpeg'), ('image_file_opt4', 'ressources/mars_45_T4_ss3_pd.jpeg'), ('correct', None)]), OrderedDict([('block', 'test'), ('block_n', 1), ('trial', 5), ('image_file_main', 'ressources/mars_35_M_ss1.jpeg'), ('image_file_opt1', 'ressources/mars_35_T1_ss1_pd.jpeg'), ('image_file_opt2', 'ressources/mars_35_T2_ss1_pd.jpeg'), ('image_file_opt3', 'ressources/mars_35_T3_ss1_pd.jpeg'), ('image_file_opt4', 'ressources/mars_35_T4_ss1_pd.jpeg'), ('correct', None)]), OrderedDict([('block', 'test'), ('block_n', 1), ('trial', 6), ('image_file_main', 'ressources/mars_72_M_ss1.jpeg'), ('image_file_opt1', 'ressources/mars_72_T1_ss1_pd.jpeg'), ('image_file_opt2', 'ressources/mars_72_T2_ss1_pd.jpeg'), ('image_file_opt3', 'ressources/mars_72_T3_ss1_pd.jpeg'), ('image_file_opt4', 'ressources/mars_72_T4_ss1_pd.jpeg'), ('correct', None)]), OrderedDict([('block', 'test'), ('block_n', 1), ('trial', 7), ('image_file_main', 'ressources/mars_27_M_ss1.jpeg'), ('image_file_opt1', 'ressources/mars_27_T1_ss1_pd.jpeg'), ('image_file_opt2', 'ressources/mars_27_T2_ss1_pd.jpeg'), ('image_file_opt3', 'ressources/mars_27_T3_ss1_pd.jpeg'), ('image_file_opt4', 'ressources/mars_27_T4_ss1_pd.jpeg'), ('correct', None)]), OrderedDict([('block', 'test'), ('block_n', 1), ('trial', 8), ('image_file_main', 'ressources/mars_79_M_ss3.jpeg'), ('image_file_opt1', 'ressources/mars_79_T1_ss3_pd.jpeg'), ('image_file_opt2', 'ressources/mars_79_T2_ss3_pd.jpeg'), ('image_file_opt3', 'ressources/mars_79_T3_ss3_pd.jpeg'), ('image_file_opt4', 'ressources/mars_79_T4_ss3_pd.jpeg'), ('correct', None)]), OrderedDict([('block', 'test'), ('block_n', 1), ('trial', 9), ('image_file_main', 'ressources/mars_29_M_ss2.jpeg'), ('image_file_opt1', 'ressources/mars_29_T1_ss2_pd.jpeg'), ('image_file_opt2', 'ressources/mars_29_T2_ss2_pd.jpeg'), ('image_file_opt3', 'ressources/mars_29_T3_ss2_pd.jpeg'), ('image_file_opt4', 'ressources/mars_29_T4_ss2_pd.jpeg'), ('correct', None)]), OrderedDict([('block', 'test'), ('block_n', 1), ('trial', 10), ('image_file_main', 'ressources/mars_24_M_ss3.jpeg'), ('image_file_opt1', 'ressources/mars_24_T1_ss3_pd.jpeg'), ('image_file_opt2', 'ressources/mars_24_T2_ss3_pd.jpeg'), ('image_file_opt3', 'ressources/mars_24_T3_ss3_pd.jpeg'), ('image_file_opt4', 'ressources/mars_24_T4_ss3_pd.jpeg'), ('correct', None)]), OrderedDict([('block', 'test'), ('block_n', 1), ('trial', 11), ('image_file_main', 'ressources/mars_42_M_ss3.jpeg'), ('image_file_opt1', 'ressources/mars_42_T1_ss3_pd.jpeg'), ('image_file_opt2', 'ressources/mars_42_T2_ss3_pd.jpeg'), ('image_file_opt3', 'ressources/mars_42_T3_ss3_pd.jpeg'), ('image_file_opt4', 'ressources/mars_42_T4_ss3_pd.jpeg'), ('correct', None)]), OrderedDict([('block', 'test'), ('block_n', 1), ('trial', 12), ('image_file_main', 'ressources/mars_54_M_ss1.jpeg'), ('image_file_opt1', 'ressources/mars_54_T1_ss1_pd.jpeg'), ('image_file_opt2', 'ressources/mars_54_T2_ss1_pd.jpeg'), ('image_file_opt3', 'ressources/mars_54_T3_ss1_pd.jpeg'), ('image_file_opt4', 'ressources/mars_54_T4_ss1_pd.jpeg'), ('correct', None)]), OrderedDict([('block', 'test'), ('block_n', 1), ('trial', 13), ('image_file_main', 'ressources/mars_17_M_ss3.jpeg'), ('image_file_opt1', 'ressources/mars_17_T1_ss3_pd.jpeg'), ('image_file_opt2', 'ressources/mars_17_T2_ss3_pd.jpeg'), ('image_file_opt3', 'ressources/mars_17_T3_ss3_pd.jpeg'), ('image_file_opt4', 'ressources/mars_17_T4_ss3_pd.jpeg'), ('correct', None)]), OrderedDict([('block', 'test'), ('block_n', 1), ('trial', 14), ('image_file_main', 'ressources/mars_58_M_ss3.jpeg'), ('image_file_opt1', 'ressources/mars_58_T1_ss3_md.jpeg'), ('image_file_opt2', 'ressources/mars_58_T2_ss3_md.jpeg'), ('image_file_opt3', 'ressources/mars_58_T3_ss3_md.jpeg'), ('image_file_opt4', 'ressources/mars_58_T4_ss3_md.jpeg'), ('correct', None)]), OrderedDict([('block', 'test'), ('block_n', 1), ('trial', 15), ('image_file_main', 'ressources/mars_73_M_ss2.jpeg'), ('image_file_opt1', 'ressources/mars_73_T1_ss2_pd.jpeg'), ('image_file_opt2', 'ressources/mars_73_T2_ss2_pd.jpeg'), ('image_file_opt3', 'ressources/mars_73_T3_ss2_pd.jpeg'), ('image_file_opt4', 'ressources/mars_73_T4_ss2_pd.jpeg'), ('correct', None)]), OrderedDict([('block', 'test'), ('block_n', 1), ('trial', 16), ('image_file_main', 'ressources/mars_36_M_ss3.jpeg'), ('image_file_opt1', 'ressources/mars_36_T1_ss3_pd.jpeg'), ('image_file_opt2', 'ressources/mars_36_T2_ss3_pd.jpeg'), ('image_file_opt3', 'ressources/mars_36_T3_ss3_pd.jpeg'), ('image_file_opt4', 'ressources/mars_36_T4_ss3_pd.jpeg'), ('correct', None)]), OrderedDict([('block', 'test'), ('block_n', 1), ('trial', 17), ('image_file_main', 'ressources/mars_63_M_ss3.jpeg'), ('image_file_opt1', 'ressources/mars_63_T1_ss3_pd.jpeg'), ('image_file_opt2', 'ressources/mars_63_T2_ss3_pd.jpeg'), ('image_file_opt3', 'ressources/mars_63_T3_ss3_pd.jpeg'), ('image_file_opt4', 'ressources/mars_63_T4_ss3_pd.jpeg'), ('correct', None)]), OrderedDict([('block', 'test'), ('block_n', 1), ('trial', 18), ('image_file_main', 'ressources/mars_75_M_ss2.jpeg'), ('image_file_opt1', 'ressources/mars_75_T1_ss2_pd.jpeg'), ('image_file_opt2', 'ressources/mars_75_T2_ss2_pd.jpeg'), ('image_file_opt3', 'ressources/mars_75_T3_ss2_pd.jpeg'), ('image_file_opt4', 'ressources/mars_75_T4_ss2_pd.jpeg'), ('correct', None)]), OrderedDict([('block', 'test'), ('block_n', 1), ('trial', 19), ('image_file_main', 'ressources/mars_74_M_ss3.jpeg'), ('image_file_opt1', 'ressources/mars_74_T1_ss3_pd.jpeg'), ('image_file_opt2', 'ressources/mars_74_T2_ss3_pd.jpeg'), ('image_file_opt3', 'ressources/mars_74_T3_ss3_pd.jpeg'), ('image_file_opt4', 'ressources/mars_74_T4_ss3_pd.jpeg'), ('correct', None)]), OrderedDict([('block', 'test'), ('block_n', 1), ('trial', 20), ('image_file_main', 'ressources/mars_76_M_ss1.jpeg'), ('image_file_opt1', 'ressources/mars_76_T1_ss1_pd.jpeg'), ('image_file_opt2', 'ressources/mars_76_T2_ss1_pd.jpeg'), ('image_file_opt3', 'ressources/mars_76_T3_ss1_pd.jpeg'), ('image_file_opt4', 'ressources/mars_76_T4_ss1_pd.jpeg'), ('correct', None)]), OrderedDict([('block', 'test'), ('block_n', 1), ('trial', 21), ('image_file_main', 'ressources/mars_80_M_ss2.jpeg'), ('image_file_opt1', 'ressources/mars_80_T1_ss2_pd.jpeg'), ('image_file_opt2', 'ressources/mars_80_T2_ss2_pd.jpeg'), ('image_file_opt3', 'ressources/mars_80_T3_ss2_pd.jpeg'), ('image_file_opt4', 'ressources/mars_80_T4_ss2_pd.jpeg'), ('correct', None)]), OrderedDict([('block', 'test'), ('block_n', 1), ('trial', 22), ('image_file_main', 'ressources/mars_66_M_ss2.jpeg'), ('image_file_opt1', 'ressources/mars_66_T1_ss2_pd.jpeg'), ('image_file_opt2', 'ressources/mars_66_T2_ss2_pd.jpeg'), ('image_file_opt3', 'ressources/mars_66_T3_ss2_pd.jpeg'), ('image_file_opt4', 'ressources/mars_66_T4_ss2_pd.jpeg'), ('correct', None)]), OrderedDict([('block', 'test'), ('block_n', 1), ('trial', 23), ('image_file_main', 'ressources/mars_21_M_ss1.jpeg'), ('image_file_opt1', 'ressources/mars_21_T1_ss1_pd.jpeg'), ('image_file_opt2', 'ressources/mars_21_T2_ss1_pd.jpeg'), ('image_file_opt3', 'ressources/mars_21_T3_ss1_pd.jpeg'), ('image_file_opt4', 'ressources/mars_21_T4_ss1_pd.jpeg'), ('correct', None)]), OrderedDict([('block', 'test'), ('block_n', 1), ('trial', 24), ('image_file_main', 'ressources/mars_78_M_ss1.jpeg'), ('image_file_opt1', 'ressources/mars_78_T1_ss1_pd.jpeg'), ('image_file_opt2', 'ressources/mars_78_T2_ss1_pd.jpeg'), ('image_file_opt3', 'ressources/mars_78_T3_ss1_pd.jpeg'), ('image_file_opt4', 'ressources/mars_78_T4_ss1_pd.jpeg'), ('correct', None)]), OrderedDict([('block', 'test'), ('block_n', 2), ('trial', 1), ('image_file_main', 'ressources/mars_45_M_ss1.jpeg'), ('image_file_opt1', 'ressources/mars_45_T1_ss1_pd.jpeg'), ('image_file_opt2', 'ressources/mars_45_T2_ss1_pd.jpeg'), ('image_file_opt3', 'ressources/mars_45_T3_ss1_pd.jpeg'), ('image_file_opt4', 'ressources/mars_45_T4_ss1_pd.jpeg'), ('correct', None)]), OrderedDict([('block', 'test'), ('block_n', 2), ('trial', 2), ('image_file_main', 'ressources/mars_30_M_ss1.jpeg'), ('image_file_opt1', 'ressources/mars_30_T1_ss1_pd.jpeg'), ('image_file_opt2', 'ressources/mars_30_T2_ss1_pd.jpeg'), ('image_file_opt3', 'ressources/mars_30_T3_ss1_pd.jpeg'), ('image_file_opt4', 'ressources/mars_30_T4_ss1_pd.jpeg'), ('correct', None)]), OrderedDict([('block', 'test'), ('block_n', 2), ('trial', 3), ('image_file_main', 'ressources/mars_55_M_ss3.jpeg'), ('image_file_opt1', 'ressources/mars_55_T1_ss3_pd.jpeg'), ('image_file_opt2', 'ressources/mars_55_T2_ss3_pd.jpeg'), ('image_file_opt3', 'ressources/mars_55_T3_ss3_pd.jpeg'), ('image_file_opt4', 'ressources/mars_55_T4_ss3_pd.jpeg'), ('correct', None)]), OrderedDict([('block', 'test'), ('block_n', 2), ('trial', 4), ('image_file_main', 'ressources/mars_58_M_ss2.jpeg'), ('image_file_opt1', 'ressources/mars_58_T1_ss2_md.jpeg'), ('image_file_opt2', 'ressources/mars_58_T2_ss2_md.jpeg'), ('image_file_opt3', 'ressources/mars_58_T3_ss2_md.jpeg'), ('image_file_opt4', 'ressources/mars_58_T4_ss2_md.jpeg'), ('correct', None)]), OrderedDict([('block', 'test'), ('block_n', 2), ('trial', 5), ('image_file_main', 'ressources/mars_42_M_ss1.jpeg'), ('image_file_opt1', 'ressources/mars_42_T1_ss1_pd.jpeg'), ('image_file_opt2', 'ressources/mars_42_T2_ss1_pd.jpeg'), ('image_file_opt3', 'ressources/mars_42_T3_ss1_pd.jpeg'), ('image_file_opt4', 'ressources/mars_42_T4_ss1_pd.jpeg'), ('correct', None)]), OrderedDict([('block', 'test'), ('block_n', 2), ('trial', 6), ('image_file_main', 'ressources/mars_52_M_ss2.jpeg'), ('image_file_opt1', 'ressources/mars_52_T1_ss2_pd.jpeg'), ('image_file_opt2', 'ressources/mars_52_T2_ss2_pd.jpeg'), ('image_file_opt3', 'ressources/mars_52_T3_ss2_pd.jpeg'), ('image_file_opt4', 'ressources/mars_52_T4_ss2_pd.jpeg'), ('correct', None)]), OrderedDict([('block', 'test'), ('block_n', 2), ('trial', 7), ('image_file_main', 'ressources/mars_29_M_ss3.jpeg'), ('image_file_opt1', 'ressources/mars_29_T1_ss3_pd.jpeg'), ('image_file_opt2', 'ressources/mars_29_T2_ss3_pd.jpeg'), ('image_file_opt3', 'ressources/mars_29_T3_ss3_pd.jpeg'), ('image_file_opt4', 'ressources/mars_29_T4_ss3_pd.jpeg'), ('correct', None)]), OrderedDict([('block', 'test'), ('block_n', 2), ('trial', 8), ('image_file_main', 'ressources/mars_24_M_ss1.jpeg'), ('image_file_opt1', 'ressources/mars_24_T1_ss1_pd.jpeg'), ('image_file_opt2', 'ressources/mars_24_T2_ss1_pd.jpeg'), ('image_file_opt3', 'ressources/mars_24_T3_ss1_pd.jpeg'), ('image_file_opt4', 'ressources/mars_24_T4_ss1_pd.jpeg'), ('correct', None)]), OrderedDict([('block', 'test'), ('block_n', 2), ('trial', 9), ('image_file_main', 'ressources/mars_17_M_ss2.jpeg'), ('image_file_opt1', 'ressources/mars_17_T1_ss2_pd.jpeg'), ('image_file_opt2', 'ressources/mars_17_T2_ss2_pd.jpeg'), ('image_file_opt3', 'ressources/mars_17_T3_ss2_pd.jpeg'), ('image_file_opt4', 'ressources/mars_17_T4_ss2_pd.jpeg'), ('correct', None)]), OrderedDict([('block', 'test'), ('block_n', 2), ('trial', 10), ('image_file_main', 'ressources/mars_76_M_ss2.jpeg'), ('image_file_opt1', 'ressources/mars_76_T1_ss2_pd.jpeg'), ('image_file_opt2', 'ressources/mars_76_T2_ss2_pd.jpeg'), ('image_file_opt3', 'ressources/mars_76_T3_ss2_pd.jpeg'), ('image_file_opt4', 'ressources/mars_76_T4_ss2_pd.jpeg'), ('correct', None)]), OrderedDict([('block', 'test'), ('block_n', 2), ('trial', 11), ('image_file_main', 'ressources/mars_75_M_ss3.jpeg'), ('image_file_opt1', 'ressources/mars_75_T1_ss3_pd.jpeg'), ('image_file_opt2', 'ressources/mars_75_T2_ss3_pd.jpeg'), ('image_file_opt3', 'ressources/mars_75_T3_ss3_pd.jpeg'), ('image_file_opt4', 'ressources/mars_75_T4_ss3_pd.jpeg'), ('correct', None)]), OrderedDict([('block', 'test'), ('block_n', 2), ('trial', 12), ('image_file_main', 'ressources/mars_72_M_ss2.jpeg'), ('image_file_opt1', 'ressources/mars_72_T1_ss2_pd.jpeg'), ('image_file_opt2', 'ressources/mars_72_T2_ss2_pd.jpeg'), ('image_file_opt3', 'ressources/mars_72_T3_ss2_pd.jpeg'), ('image_file_opt4', 'ressources/mars_72_T4_ss2_pd.jpeg'), ('correct', None)]), OrderedDict([('block', 'test'), ('block_n', 2), ('trial', 13), ('image_file_main', 'ressources/mars_35_M_ss2.jpeg'), ('image_file_opt1', 'ressources/mars_35_T1_ss2_pd.jpeg'), ('image_file_opt2', 'ressources/mars_35_T2_ss2_pd.jpeg'), ('image_file_opt3', 'ressources/mars_35_T3_ss2_pd.jpeg'), ('image_file_opt4', 'ressources/mars_35_T4_ss2_pd.jpeg'), ('correct', None)]), OrderedDict([('block', 'test'), ('block_n', 2), ('trial', 14), ('image_file_main', 'ressources/mars_36_M_ss1.jpeg'), ('image_file_opt1', 'ressources/mars_36_T1_ss1_pd.jpeg'), ('image_file_opt2', 'ressources/mars_36_T2_ss1_pd.jpeg'), ('image_file_opt3', 'ressources/mars_36_T3_ss1_pd.jpeg'), ('image_file_opt4', 'ressources/mars_36_T4_ss1_pd.jpeg'), ('correct', None)]), OrderedDict([('block', 'test'), ('block_n', 2), ('trial', 15), ('image_file_main', 'ressources/mars_64_M_ss3.jpeg'), ('image_file_opt1', 'ressources/mars_64_T1_ss3_pd.jpeg'), ('image_file_opt2', 'ressources/mars_64_T2_ss3_pd.jpeg'), ('image_file_opt3', 'ressources/mars_64_T3_ss3_pd.jpeg'), ('image_file_opt4', 'ressources/mars_64_T4_ss3_pd.jpeg'), ('correct', None)]), OrderedDict([('block', 'test'), ('block_n', 2), ('trial', 16), ('image_file_main', 'ressources/mars_80_M_ss1.jpeg'), ('image_file_opt1', 'ressources/mars_80_T1_ss1_pd.jpeg'), ('image_file_opt2', 'ressources/mars_80_T2_ss1_pd.jpeg'), ('image_file_opt3', 'ressources/mars_80_T3_ss1_pd.jpeg'), ('image_file_opt4', 'ressources/mars_80_T4_ss1_pd.jpeg'), ('correct', None)]), OrderedDict([('block', 'test'), ('block_n', 2), ('trial', 17), ('image_file_main', 'ressources/mars_74_M_ss1.jpeg'), ('image_file_opt1', 'ressources/mars_74_T1_ss1_pd.jpeg'), ('image_file_opt2', 'ressources/mars_74_T2_ss1_pd.jpeg'), ('image_file_opt3', 'ressources/mars_74_T3_ss1_pd.jpeg'), ('image_file_opt4', 'ressources/mars_74_T4_ss1_pd.jpeg'), ('correct', None)]), OrderedDict([('block', 'test'), ('block_n', 2), ('trial', 18), ('image_file_main', 'ressources/mars_46_M_ss2.jpeg'), ('image_file_opt1', 'ressources/mars_46_T1_ss2_pd.jpeg'), ('image_file_opt2', 'ressources/mars_46_T2_ss2_pd.jpeg'), ('image_file_opt3', 'ressources/mars_46_T3_ss2_pd.jpeg'), ('image_file_opt4', 'ressources/mars_46_T4_ss2_pd.jpeg'), ('correct', None)]), OrderedDict([('block', 'test'), ('block_n', 2), ('trial', 19), ('image_file_main', 'ressources/mars_59_M_ss2.jpeg'), ('image_file_opt1', 'ressources/mars_59_T1_ss2_pd.jpeg'), ('image_file_opt2', 'ressources/mars_59_T2_ss2_pd.jpeg'), ('image_file_opt3', 'ressources/mars_59_T3_ss2_pd.jpeg'), ('image_file_opt4', 'ressources/mars_59_T4_ss2_pd.jpeg'), ('correct', None)]), OrderedDict([('block', 'test'), ('block_n', 2), ('trial', 20), ('image_file_main', 'ressources/mars_66_M_ss3.jpeg'), ('image_file_opt1', 'ressources/mars_66_T1_ss3_pd.jpeg'), ('image_file_opt2', 'ressources/mars_66_T2_ss3_pd.jpeg'), ('image_file_opt3', 'ressources/mars_66_T3_ss3_pd.jpeg'), ('image_file_opt4', 'ressources/mars_66_T4_ss3_pd.jpeg'), ('correct', None)]), OrderedDict([('block', 'test'), ('block_n', 2), ('trial', 21), ('image_file_main', 'ressources/mars_63_M_ss1.jpeg'), ('image_file_opt1', 'ressources/mars_63_T1_ss1_pd.jpeg'), ('image_file_opt2', 'ressources/mars_63_T2_ss1_pd.jpeg'), ('image_file_opt3', 'ressources/mars_63_T3_ss1_pd.jpeg'), ('image_file_opt4', 'ressources/mars_63_T4_ss1_pd.jpeg'), ('correct', None)]), OrderedDict([('block', 'test'), ('block_n', 2), ('trial', 22), ('image_file_main', 'ressources/mars_21_M_ss3.jpeg'), ('image_file_opt1', 'ressources/mars_21_T1_ss3_pd.jpeg'), ('image_file_opt2', 'ressources/mars_21_T2_ss3_pd.jpeg'), ('image_file_opt3', 'ressources/mars_21_T3_ss3_pd.jpeg'), ('image_file_opt4', 'ressources/mars_21_T4_ss3_pd.jpeg'), ('correct', None)]), OrderedDict([('block', 'test'), ('block_n', 2), ('trial', 23), ('image_file_main', 'ressources/mars_78_M_ss3.jpeg'), ('image_file_opt1', 'ressources/mars_78_T1_ss3_pd.jpeg'), ('image_file_opt2', 'ressources/mars_78_T2_ss3_pd.jpeg'), ('image_file_opt3', 'ressources/mars_78_T3_ss3_pd.jpeg'), ('image_file_opt4', 'ressources/mars_78_T4_ss3_pd.jpeg'), ('correct', None)]), OrderedDict([('block', 'test'), ('block_n', 2), ('trial', 24), ('image_file_main', 'ressources/mars_44_M_ss2.jpeg'), ('image_file_opt1', 'ressources/mars_44_T1_ss2_pd.jpeg'), ('image_file_opt2', 'ressources/mars_44_T2_ss2_pd.jpeg'), ('image_file_opt3', 'ressources/mars_44_T3_ss2_pd.jpeg'), ('image_file_opt4', 'ressources/mars_44_T4_ss2_pd.jpeg'), ('correct', None)])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="MARS-IB_scenario.csv" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="practice" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="fixation_cross"/>
    <Routine name="trial"/>
    <LoopTerminator name="practice"/>
    <Routine name="startTask"/>
    <LoopInitiator loopType="TrialHandler" name="testblocks">
      <Param name="Selected rows" updates="None" val="$scenario_df[(scenario_df['block'] == 'test') &amp; (scenario_df['block_n'] == block_index)].index.tolist()" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('block', 'practice'), ('block_n', 1), ('trial', 1), ('image_file_main', 'ressources/mars_3_M_ss1.jpeg'), ('image_file_opt1', 'ressources/mars_3_T1_ss1_pd.jpeg'), ('image_file_opt2', 'ressources/mars_3_T2_ss1_pd.jpeg'), ('image_file_opt3', 'ressources/mars_3_T3_ss1_pd.jpeg'), ('image_file_opt4', 'ressources/mars_3_T4_ss1_pd.jpeg'), ('correct', None)]), OrderedDict([('block', 'practice'), ('block_n', 1), ('trial', 2), ('image_file_main', 'ressources/mars_1_M_ss2.jpeg'), ('image_file_opt1', 'ressources/mars_1_T1_ss2_pd.jpeg'), ('image_file_opt2', 'ressources/mars_1_T2_ss2_pd.jpeg'), ('image_file_opt3', 'ressources/mars_1_T3_ss2_pd.jpeg'), ('image_file_opt4', 'ressources/mars_1_T4_ss2_pd.jpeg'), ('correct', None)]), OrderedDict([('block', 'practice'), ('block_n', 1), ('trial', 3), ('image_file_main', 'ressources/mars_2_M_ss3.jpeg'), ('image_file_opt1', 'ressources/mars_2_T1_ss3_pd.jpeg'), ('image_file_opt2', 'ressources/mars_2_T2_ss3_pd.jpeg'), ('image_file_opt3', 'ressources/mars_2_T3_ss3_pd.jpeg'), ('image_file_opt4', 'ressources/mars_2_T4_ss3_pd.jpeg'), ('correct', None)]), OrderedDict([('block', 'test'), ('block_n', 1), ('trial', 1), ('image_file_main', 'ressources/mars_55_M_ss1.jpeg'), ('image_file_opt1', 'ressources/mars_55_T1_ss1_pd.jpeg'), ('image_file_opt2', 'ressources/mars_55_T2_ss1_pd.jpeg'), ('image_file_opt3', 'ressources/mars_55_T3_ss1_pd.jpeg'), ('image_file_opt4', 'ressources/mars_55_T4_ss1_pd.jpeg'), ('correct', None)]), OrderedDict([('block', 'test'), ('block_n', 1), ('trial', 2), ('image_file_main', 'ressources/mars_30_M_ss3.jpeg'), ('image_file_opt1', 'ressources/mars_30_T1_ss3_pd.jpeg'), ('image_file_opt2', 'ressources/mars_30_T2_ss3_pd.jpeg'), ('image_file_opt3', 'ressources/mars_30_T3_ss3_pd.jpeg'), ('image_file_opt4', 'ressources/mars_30_T4_ss3_pd.jpeg'), ('correct', None)]), OrderedDict([('block', 'test'), ('block_n', 1), ('trial', 3), ('image_file_main', 'ressources/mars_64_M_ss1.jpeg'), ('image_file_opt1', 'ressources/mars_64_T1_ss1_pd.jpeg'), ('image_file_opt2', 'ressources/mars_64_T2_ss1_pd.jpeg'), ('image_file_opt3', 'ressources/mars_64_T3_ss1_pd.jpeg'), ('image_file_opt4', 'ressources/mars_64_T4_ss1_pd.jpeg'), ('correct', None)]), OrderedDict([('block', 'test'), ('block_n', 1), ('trial', 4), ('image_file_main', 'ressources/mars_45_M_ss3.jpeg'), ('image_file_opt1', 'ressources/mars_45_T1_ss3_pd.jpeg'), ('image_file_opt2', 'ressources/mars_45_T2_ss3_pd.jpeg'), ('image_file_opt3', 'ressources/mars_45_T3_ss3_pd.jpeg'), ('image_file_opt4', 'ressources/mars_45_T4_ss3_pd.jpeg'), ('correct', None)]), OrderedDict([('block', 'test'), ('block_n', 1), ('trial', 5), ('image_file_main', 'ressources/mars_35_M_ss1.jpeg'), ('image_file_opt1', 'ressources/mars_35_T1_ss1_pd.jpeg'), ('image_file_opt2', 'ressources/mars_35_T2_ss1_pd.jpeg'), ('image_file_opt3', 'ressources/mars_35_T3_ss1_pd.jpeg'), ('image_file_opt4', 'ressources/mars_35_T4_ss1_pd.jpeg'), ('correct', None)]), OrderedDict([('block', 'test'), ('block_n', 1), ('trial', 6), ('image_file_main', 'ressources/mars_72_M_ss1.jpeg'), ('image_file_opt1', 'ressources/mars_72_T1_ss1_pd.jpeg'), ('image_file_opt2', 'ressources/mars_72_T2_ss1_pd.jpeg'), ('image_file_opt3', 'ressources/mars_72_T3_ss1_pd.jpeg'), ('image_file_opt4', 'ressources/mars_72_T4_ss1_pd.jpeg'), ('correct', None)]), OrderedDict([('block', 'test'), ('block_n', 1), ('trial', 7), ('image_file_main', 'ressources/mars_27_M_ss1.jpeg'), ('image_file_opt1', 'ressources/mars_27_T1_ss1_pd.jpeg'), ('image_file_opt2', 'ressources/mars_27_T2_ss1_pd.jpeg'), ('image_file_opt3', 'ressources/mars_27_T3_ss1_pd.jpeg'), ('image_file_opt4', 'ressources/mars_27_T4_ss1_pd.jpeg'), ('correct', None)]), OrderedDict([('block', 'test'), ('block_n', 1), ('trial', 8), ('image_file_main', 'ressources/mars_79_M_ss3.jpeg'), ('image_file_opt1', 'ressources/mars_79_T1_ss3_pd.jpeg'), ('image_file_opt2', 'ressources/mars_79_T2_ss3_pd.jpeg'), ('image_file_opt3', 'ressources/mars_79_T3_ss3_pd.jpeg'), ('image_file_opt4', 'ressources/mars_79_T4_ss3_pd.jpeg'), ('correct', None)]), OrderedDict([('block', 'test'), ('block_n', 1), ('trial', 9), ('image_file_main', 'ressources/mars_29_M_ss2.jpeg'), ('image_file_opt1', 'ressources/mars_29_T1_ss2_pd.jpeg'), ('image_file_opt2', 'ressources/mars_29_T2_ss2_pd.jpeg'), ('image_file_opt3', 'ressources/mars_29_T3_ss2_pd.jpeg'), ('image_file_opt4', 'ressources/mars_29_T4_ss2_pd.jpeg'), ('correct', None)]), OrderedDict([('block', 'test'), ('block_n', 1), ('trial', 10), ('image_file_main', 'ressources/mars_24_M_ss3.jpeg'), ('image_file_opt1', 'ressources/mars_24_T1_ss3_pd.jpeg'), ('image_file_opt2', 'ressources/mars_24_T2_ss3_pd.jpeg'), ('image_file_opt3', 'ressources/mars_24_T3_ss3_pd.jpeg'), ('image_file_opt4', 'ressources/mars_24_T4_ss3_pd.jpeg'), ('correct', None)]), OrderedDict([('block', 'test'), ('block_n', 1), ('trial', 11), ('image_file_main', 'ressources/mars_42_M_ss3.jpeg'), ('image_file_opt1', 'ressources/mars_42_T1_ss3_pd.jpeg'), ('image_file_opt2', 'ressources/mars_42_T2_ss3_pd.jpeg'), ('image_file_opt3', 'ressources/mars_42_T3_ss3_pd.jpeg'), ('image_file_opt4', 'ressources/mars_42_T4_ss3_pd.jpeg'), ('correct', None)]), OrderedDict([('block', 'test'), ('block_n', 1), ('trial', 12), ('image_file_main', 'ressources/mars_54_M_ss1.jpeg'), ('image_file_opt1', 'ressources/mars_54_T1_ss1_pd.jpeg'), ('image_file_opt2', 'ressources/mars_54_T2_ss1_pd.jpeg'), ('image_file_opt3', 'ressources/mars_54_T3_ss1_pd.jpeg'), ('image_file_opt4', 'ressources/mars_54_T4_ss1_pd.jpeg'), ('correct', None)]), OrderedDict([('block', 'test'), ('block_n', 1), ('trial', 13), ('image_file_main', 'ressources/mars_17_M_ss3.jpeg'), ('image_file_opt1', 'ressources/mars_17_T1_ss3_pd.jpeg'), ('image_file_opt2', 'ressources/mars_17_T2_ss3_pd.jpeg'), ('image_file_opt3', 'ressources/mars_17_T3_ss3_pd.jpeg'), ('image_file_opt4', 'ressources/mars_17_T4_ss3_pd.jpeg'), ('correct', None)]), OrderedDict([('block', 'test'), ('block_n', 1), ('trial', 14), ('image_file_main', 'ressources/mars_58_M_ss3.jpeg'), ('image_file_opt1', 'ressources/mars_58_T1_ss3_md.jpeg'), ('image_file_opt2', 'ressources/mars_58_T2_ss3_md.jpeg'), ('image_file_opt3', 'ressources/mars_58_T3_ss3_md.jpeg'), ('image_file_opt4', 'ressources/mars_58_T4_ss3_md.jpeg'), ('correct', None)]), OrderedDict([('block', 'test'), ('block_n', 1), ('trial', 15), ('image_file_main', 'ressources/mars_73_M_ss2.jpeg'), ('image_file_opt1', 'ressources/mars_73_T1_ss2_pd.jpeg'), ('image_file_opt2', 'ressources/mars_73_T2_ss2_pd.jpeg'), ('image_file_opt3', 'ressources/mars_73_T3_ss2_pd.jpeg'), ('image_file_opt4', 'ressources/mars_73_T4_ss2_pd.jpeg'), ('correct', None)]), OrderedDict([('block', 'test'), ('block_n', 1), ('trial', 16), ('image_file_main', 'ressources/mars_36_M_ss3.jpeg'), ('image_file_opt1', 'ressources/mars_36_T1_ss3_pd.jpeg'), ('image_file_opt2', 'ressources/mars_36_T2_ss3_pd.jpeg'), ('image_file_opt3', 'ressources/mars_36_T3_ss3_pd.jpeg'), ('image_file_opt4', 'ressources/mars_36_T4_ss3_pd.jpeg'), ('correct', None)]), OrderedDict([('block', 'test'), ('block_n', 1), ('trial', 17), ('image_file_main', 'ressources/mars_63_M_ss3.jpeg'), ('image_file_opt1', 'ressources/mars_63_T1_ss3_pd.jpeg'), ('image_file_opt2', 'ressources/mars_63_T2_ss3_pd.jpeg'), ('image_file_opt3', 'ressources/mars_63_T3_ss3_pd.jpeg'), ('image_file_opt4', 'ressources/mars_63_T4_ss3_pd.jpeg'), ('correct', None)]), OrderedDict([('block', 'test'), ('block_n', 1), ('trial', 18), ('image_file_main', 'ressources/mars_75_M_ss2.jpeg'), ('image_file_opt1', 'ressources/mars_75_T1_ss2_pd.jpeg'), ('image_file_opt2', 'ressources/mars_75_T2_ss2_pd.jpeg'), ('image_file_opt3', 'ressources/mars_75_T3_ss2_pd.jpeg'), ('image_file_opt4', 'ressources/mars_75_T4_ss2_pd.jpeg'), ('correct', None)]), OrderedDict([('block', 'test'), ('block_n', 1), ('trial', 19), ('image_file_main', 'ressources/mars_74_M_ss3.jpeg'), ('image_file_opt1', 'ressources/mars_74_T1_ss3_pd.jpeg'), ('image_file_opt2', 'ressources/mars_74_T2_ss3_pd.jpeg'), ('image_file_opt3', 'ressources/mars_74_T3_ss3_pd.jpeg'), ('image_file_opt4', 'ressources/mars_74_T4_ss3_pd.jpeg'), ('correct', None)]), OrderedDict([('block', 'test'), ('block_n', 1), ('trial', 20), ('image_file_main', 'ressources/mars_76_M_ss1.jpeg'), ('image_file_opt1', 'ressources/mars_76_T1_ss1_pd.jpeg'), ('image_file_opt2', 'ressources/mars_76_T2_ss1_pd.jpeg'), ('image_file_opt3', 'ressources/mars_76_T3_ss1_pd.jpeg'), ('image_file_opt4', 'ressources/mars_76_T4_ss1_pd.jpeg'), ('correct', None)]), OrderedDict([('block', 'test'), ('block_n', 1), ('trial', 21), ('image_file_main', 'ressources/mars_80_M_ss2.jpeg'), ('image_file_opt1', 'ressources/mars_80_T1_ss2_pd.jpeg'), ('image_file_opt2', 'ressources/mars_80_T2_ss2_pd.jpeg'), ('image_file_opt3', 'ressources/mars_80_T3_ss2_pd.jpeg'), ('image_file_opt4', 'ressources/mars_80_T4_ss2_pd.jpeg'), ('correct', None)]), OrderedDict([('block', 'test'), ('block_n', 1), ('trial', 22), ('image_file_main', 'ressources/mars_66_M_ss2.jpeg'), ('image_file_opt1', 'ressources/mars_66_T1_ss2_pd.jpeg'), ('image_file_opt2', 'ressources/mars_66_T2_ss2_pd.jpeg'), ('image_file_opt3', 'ressources/mars_66_T3_ss2_pd.jpeg'), ('image_file_opt4', 'ressources/mars_66_T4_ss2_pd.jpeg'), ('correct', None)]), OrderedDict([('block', 'test'), ('block_n', 1), ('trial', 23), ('image_file_main', 'ressources/mars_21_M_ss1.jpeg'), ('image_file_opt1', 'ressources/mars_21_T1_ss1_pd.jpeg'), ('image_file_opt2', 'ressources/mars_21_T2_ss1_pd.jpeg'), ('image_file_opt3', 'ressources/mars_21_T3_ss1_pd.jpeg'), ('image_file_opt4', 'ressources/mars_21_T4_ss1_pd.jpeg'), ('correct', None)]), OrderedDict([('block', 'test'), ('block_n', 1), ('trial', 24), ('image_file_main', 'ressources/mars_78_M_ss1.jpeg'), ('image_file_opt1', 'ressources/mars_78_T1_ss1_pd.jpeg'), ('image_file_opt2', 'ressources/mars_78_T2_ss1_pd.jpeg'), ('image_file_opt3', 'ressources/mars_78_T3_ss1_pd.jpeg'), ('image_file_opt4', 'ressources/mars_78_T4_ss1_pd.jpeg'), ('correct', None)])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="MARS-IB_scenario.csv" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="False" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="testblocks" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="block_counter"/>
    <LoopInitiator loopType="TrialHandler" name="trials">
      <Param name="Selected rows" updates="None" val="$scenario_df[(scenario_df['block'] == 'test') &amp; (scenario_df['block_n'] == block_index)].index.tolist()" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('block', 'practice'), ('block_n', 1), ('trial', 1), ('image_file_main', 'ressources/mars_3_M_ss1.jpeg'), ('image_file_opt1', 'ressources/mars_3_T1_ss1_pd.jpeg'), ('image_file_opt2', 'ressources/mars_3_T2_ss1_pd.jpeg'), ('image_file_opt3', 'ressources/mars_3_T3_ss1_pd.jpeg'), ('image_file_opt4', 'ressources/mars_3_T4_ss1_pd.jpeg'), ('correct', None)]), OrderedDict([('block', 'practice'), ('block_n', 1), ('trial', 2), ('image_file_main', 'ressources/mars_1_M_ss2.jpeg'), ('image_file_opt1', 'ressources/mars_1_T1_ss2_pd.jpeg'), ('image_file_opt2', 'ressources/mars_1_T2_ss2_pd.jpeg'), ('image_file_opt3', 'ressources/mars_1_T3_ss2_pd.jpeg'), ('image_file_opt4', 'ressources/mars_1_T4_ss2_pd.jpeg'), ('correct', None)]), OrderedDict([('block', 'practice'), ('block_n', 1), ('trial', 3), ('image_file_main', 'ressources/mars_2_M_ss3.jpeg'), ('image_file_opt1', 'ressources/mars_2_T1_ss3_pd.jpeg'), ('image_file_opt2', 'ressources/mars_2_T2_ss3_pd.jpeg'), ('image_file_opt3', 'ressources/mars_2_T3_ss3_pd.jpeg'), ('image_file_opt4', 'ressources/mars_2_T4_ss3_pd.jpeg'), ('correct', None)]), OrderedDict([('block', 'test'), ('block_n', 1), ('trial', 1), ('image_file_main', 'ressources/mars_55_M_ss1.jpeg'), ('image_file_opt1', 'ressources/mars_55_T1_ss1_pd.jpeg'), ('image_file_opt2', 'ressources/mars_55_T2_ss1_pd.jpeg'), ('image_file_opt3', 'ressources/mars_55_T3_ss1_pd.jpeg'), ('image_file_opt4', 'ressources/mars_55_T4_ss1_pd.jpeg'), ('correct', None)]), OrderedDict([('block', 'test'), ('block_n', 1), ('trial', 2), ('image_file_main', 'ressources/mars_30_M_ss3.jpeg'), ('image_file_opt1', 'ressources/mars_30_T1_ss3_pd.jpeg'), ('image_file_opt2', 'ressources/mars_30_T2_ss3_pd.jpeg'), ('image_file_opt3', 'ressources/mars_30_T3_ss3_pd.jpeg'), ('image_file_opt4', 'ressources/mars_30_T4_ss3_pd.jpeg'), ('correct', None)]), OrderedDict([('block', 'test'), ('block_n', 1), ('trial', 3), ('image_file_main', 'ressources/mars_64_M_ss1.jpeg'), ('image_file_opt1', 'ressources/mars_64_T1_ss1_pd.jpeg'), ('image_file_opt2', 'ressources/mars_64_T2_ss1_pd.jpeg'), ('image_file_opt3', 'ressources/mars_64_T3_ss1_pd.jpeg'), ('image_file_opt4', 'ressources/mars_64_T4_ss1_pd.jpeg'), ('correct', None)]), OrderedDict([('block', 'test'), ('block_n', 1), ('trial', 4), ('image_file_main', 'ressources/mars_45_M_ss3.jpeg'), ('image_file_opt1', 'ressources/mars_45_T1_ss3_pd.jpeg'), ('image_file_opt2', 'ressources/mars_45_T2_ss3_pd.jpeg'), ('image_file_opt3', 'ressources/mars_45_T3_ss3_pd.jpeg'), ('image_file_opt4', 'ressources/mars_45_T4_ss3_pd.jpeg'), ('correct', None)]), OrderedDict([('block', 'test'), ('block_n', 1), ('trial', 5), ('image_file_main', 'ressources/mars_35_M_ss1.jpeg'), ('image_file_opt1', 'ressources/mars_35_T1_ss1_pd.jpeg'), ('image_file_opt2', 'ressources/mars_35_T2_ss1_pd.jpeg'), ('image_file_opt3', 'ressources/mars_35_T3_ss1_pd.jpeg'), ('image_file_opt4', 'ressources/mars_35_T4_ss1_pd.jpeg'), ('correct', None)]), OrderedDict([('block', 'test'), ('block_n', 1), ('trial', 6), ('image_file_main', 'ressources/mars_72_M_ss1.jpeg'), ('image_file_opt1', 'ressources/mars_72_T1_ss1_pd.jpeg'), ('image_file_opt2', 'ressources/mars_72_T2_ss1_pd.jpeg'), ('image_file_opt3', 'ressources/mars_72_T3_ss1_pd.jpeg'), ('image_file_opt4', 'ressources/mars_72_T4_ss1_pd.jpeg'), ('correct', None)]), OrderedDict([('block', 'test'), ('block_n', 1), ('trial', 7), ('image_file_main', 'ressources/mars_27_M_ss1.jpeg'), ('image_file_opt1', 'ressources/mars_27_T1_ss1_pd.jpeg'), ('image_file_opt2', 'ressources/mars_27_T2_ss1_pd.jpeg'), ('image_file_opt3', 'ressources/mars_27_T3_ss1_pd.jpeg'), ('image_file_opt4', 'ressources/mars_27_T4_ss1_pd.jpeg'), ('correct', None)]), OrderedDict([('block', 'test'), ('block_n', 1), ('trial', 8), ('image_file_main', 'ressources/mars_79_M_ss3.jpeg'), ('image_file_opt1', 'ressources/mars_79_T1_ss3_pd.jpeg'), ('image_file_opt2', 'ressources/mars_79_T2_ss3_pd.jpeg'), ('image_file_opt3', 'ressources/mars_79_T3_ss3_pd.jpeg'), ('image_file_opt4', 'ressources/mars_79_T4_ss3_pd.jpeg'), ('correct', None)]), OrderedDict([('block', 'test'), ('block_n', 1), ('trial', 9), ('image_file_main', 'ressources/mars_29_M_ss2.jpeg'), ('image_file_opt1', 'ressources/mars_29_T1_ss2_pd.jpeg'), ('image_file_opt2', 'ressources/mars_29_T2_ss2_pd.jpeg'), ('image_file_opt3', 'ressources/mars_29_T3_ss2_pd.jpeg'), ('image_file_opt4', 'ressources/mars_29_T4_ss2_pd.jpeg'), ('correct', None)]), OrderedDict([('block', 'test'), ('block_n', 1), ('trial', 10), ('image_file_main', 'ressources/mars_24_M_ss3.jpeg'), ('image_file_opt1', 'ressources/mars_24_T1_ss3_pd.jpeg'), ('image_file_opt2', 'ressources/mars_24_T2_ss3_pd.jpeg'), ('image_file_opt3', 'ressources/mars_24_T3_ss3_pd.jpeg'), ('image_file_opt4', 'ressources/mars_24_T4_ss3_pd.jpeg'), ('correct', None)]), OrderedDict([('block', 'test'), ('block_n', 1), ('trial', 11), ('image_file_main', 'ressources/mars_42_M_ss3.jpeg'), ('image_file_opt1', 'ressources/mars_42_T1_ss3_pd.jpeg'), ('image_file_opt2', 'ressources/mars_42_T2_ss3_pd.jpeg'), ('image_file_opt3', 'ressources/mars_42_T3_ss3_pd.jpeg'), ('image_file_opt4', 'ressources/mars_42_T4_ss3_pd.jpeg'), ('correct', None)]), OrderedDict([('block', 'test'), ('block_n', 1), ('trial', 12), ('image_file_main', 'ressources/mars_54_M_ss1.jpeg'), ('image_file_opt1', 'ressources/mars_54_T1_ss1_pd.jpeg'), ('image_file_opt2', 'ressources/mars_54_T2_ss1_pd.jpeg'), ('image_file_opt3', 'ressources/mars_54_T3_ss1_pd.jpeg'), ('image_file_opt4', 'ressources/mars_54_T4_ss1_pd.jpeg'), ('correct', None)]), OrderedDict([('block', 'test'), ('block_n', 1), ('trial', 13), ('image_file_main', 'ressources/mars_17_M_ss3.jpeg'), ('image_file_opt1', 'ressources/mars_17_T1_ss3_pd.jpeg'), ('image_file_opt2', 'ressources/mars_17_T2_ss3_pd.jpeg'), ('image_file_opt3', 'ressources/mars_17_T3_ss3_pd.jpeg'), ('image_file_opt4', 'ressources/mars_17_T4_ss3_pd.jpeg'), ('correct', None)]), OrderedDict([('block', 'test'), ('block_n', 1), ('trial', 14), ('image_file_main', 'ressources/mars_58_M_ss3.jpeg'), ('image_file_opt1', 'ressources/mars_58_T1_ss3_md.jpeg'), ('image_file_opt2', 'ressources/mars_58_T2_ss3_md.jpeg'), ('image_file_opt3', 'ressources/mars_58_T3_ss3_md.jpeg'), ('image_file_opt4', 'ressources/mars_58_T4_ss3_md.jpeg'), ('correct', None)]), OrderedDict([('block', 'test'), ('block_n', 1), ('trial', 15), ('image_file_main', 'ressources/mars_73_M_ss2.jpeg'), ('image_file_opt1', 'ressources/mars_73_T1_ss2_pd.jpeg'), ('image_file_opt2', 'ressources/mars_73_T2_ss2_pd.jpeg'), ('image_file_opt3', 'ressources/mars_73_T3_ss2_pd.jpeg'), ('image_file_opt4', 'ressources/mars_73_T4_ss2_pd.jpeg'), ('correct', None)]), OrderedDict([('block', 'test'), ('block_n', 1), ('trial', 16), ('image_file_main', 'ressources/mars_36_M_ss3.jpeg'), ('image_file_opt1', 'ressources/mars_36_T1_ss3_pd.jpeg'), ('image_file_opt2', 'ressources/mars_36_T2_ss3_pd.jpeg'), ('image_file_opt3', 'ressources/mars_36_T3_ss3_pd.jpeg'), ('image_file_opt4', 'ressources/mars_36_T4_ss3_pd.jpeg'), ('correct', None)]), OrderedDict([('block', 'test'), ('block_n', 1), ('trial', 17), ('image_file_main', 'ressources/mars_63_M_ss3.jpeg'), ('image_file_opt1', 'ressources/mars_63_T1_ss3_pd.jpeg'), ('image_file_opt2', 'ressources/mars_63_T2_ss3_pd.jpeg'), ('image_file_opt3', 'ressources/mars_63_T3_ss3_pd.jpeg'), ('image_file_opt4', 'ressources/mars_63_T4_ss3_pd.jpeg'), ('correct', None)]), OrderedDict([('block', 'test'), ('block_n', 1), ('trial', 18), ('image_file_main', 'ressources/mars_75_M_ss2.jpeg'), ('image_file_opt1', 'ressources/mars_75_T1_ss2_pd.jpeg'), ('image_file_opt2', 'ressources/mars_75_T2_ss2_pd.jpeg'), ('image_file_opt3', 'ressources/mars_75_T3_ss2_pd.jpeg'), ('image_file_opt4', 'ressources/mars_75_T4_ss2_pd.jpeg'), ('correct', None)]), OrderedDict([('block', 'test'), ('block_n', 1), ('trial', 19), ('image_file_main', 'ressources/mars_74_M_ss3.jpeg'), ('image_file_opt1', 'ressources/mars_74_T1_ss3_pd.jpeg'), ('image_file_opt2', 'ressources/mars_74_T2_ss3_pd.jpeg'), ('image_file_opt3', 'ressources/mars_74_T3_ss3_pd.jpeg'), ('image_file_opt4', 'ressources/mars_74_T4_ss3_pd.jpeg'), ('correct', None)]), OrderedDict([('block', 'test'), ('block_n', 1), ('trial', 20), ('image_file_main', 'ressources/mars_76_M_ss1.jpeg'), ('image_file_opt1', 'ressources/mars_76_T1_ss1_pd.jpeg'), ('image_file_opt2', 'ressources/mars_76_T2_ss1_pd.jpeg'), ('image_file_opt3', 'ressources/mars_76_T3_ss1_pd.jpeg'), ('image_file_opt4', 'ressources/mars_76_T4_ss1_pd.jpeg'), ('correct', None)]), OrderedDict([('block', 'test'), ('block_n', 1), ('trial', 21), ('image_file_main', 'ressources/mars_80_M_ss2.jpeg'), ('image_file_opt1', 'ressources/mars_80_T1_ss2_pd.jpeg'), ('image_file_opt2', 'ressources/mars_80_T2_ss2_pd.jpeg'), ('image_file_opt3', 'ressources/mars_80_T3_ss2_pd.jpeg'), ('image_file_opt4', 'ressources/mars_80_T4_ss2_pd.jpeg'), ('correct', None)]), OrderedDict([('block', 'test'), ('block_n', 1), ('trial', 22), ('image_file_main', 'ressources/mars_66_M_ss2.jpeg'), ('image_file_opt1', 'ressources/mars_66_T1_ss2_pd.jpeg'), ('image_file_opt2', 'ressources/mars_66_T2_ss2_pd.jpeg'), ('image_file_opt3', 'ressources/mars_66_T3_ss2_pd.jpeg'), ('image_file_opt4', 'ressources/mars_66_T4_ss2_pd.jpeg'), ('correct', None)]), OrderedDict([('block', 'test'), ('block_n', 1), ('trial', 23), ('image_file_main', 'ressources/mars_21_M_ss1.jpeg'), ('image_file_opt1', 'ressources/mars_21_T1_ss1_pd.jpeg'), ('image_file_opt2', 'ressources/mars_21_T2_ss1_pd.jpeg'), ('image_file_opt3', 'ressources/mars_21_T3_ss1_pd.jpeg'), ('image_file_opt4', 'ressources/mars_21_T4_ss1_pd.jpeg'), ('correct', None)]), OrderedDict([('block', 'test'), ('block_n', 1), ('trial', 24), ('image_file_main', 'ressources/mars_78_M_ss1.jpeg'), ('image_file_opt1', 'ressources/mars_78_T1_ss1_pd.jpeg'), ('image_file_opt2', 'ressources/mars_78_T2_ss1_pd.jpeg'), ('image_file_opt3', 'ressources/mars_78_T3_ss1_pd.jpeg'), ('image_file_opt4', 'ressources/mars_78_T4_ss1_pd.jpeg'), ('correct', None)])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="MARS-IB_scenario.csv" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="code"/>
      <Param name="name" updates="None" val="trials" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="fixation_cross"/>
    <Routine name="trial"/>
    <LoopTerminator name="trials"/>
    <Routine name="pause"/>
    <LoopTerminator name="testblocks"/>
    <Routine name="done"/>
  </Flow>
</PsychoPy2experiment>
